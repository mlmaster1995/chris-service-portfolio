#################################################################################
# MIT License                                                                   #
#                                                                               #
# Copyright (c) 2024 Chris Yang                                                 #
#                                                                               #
# Permission is hereby granted, free of charge, to any person obtaining a copy  #
# of this software and associated documentation files (the "Software"), to deal #
# in the Software without restriction, including without limitation the rights  #
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell     #
# copies of the Software, and to permit persons to whom the Software is         #
# furnished to do so, subject to the following conditions:                      #
#                                                                               #
# The above copyright notice and this permission notice shall be included in all#
# copies or substantial portions of the Software.                               #
#                                                                               #
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR    #
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,      #
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE   #
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER        #
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, #
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE #
# SOFTWARE.                                                                     #
#################################################################################

# NOTE:
# 1. this file is ONLY used to build the helm chart package MANUALLY and deployed to EKS MANUALLY 
# 
# 2. In CI/CD pipeline, Ansible uses the helm_chart_values.j2 to generate this file on fly with 
# any values updated in the cd_vars.yml
# 
# 3. In CI/CD pipeline, Ansible playbook enabled the vault for the sensitive data, but MANUL 
# build & deplopy NOT has this security measure 

############# parent chart values: !!! override values of sub-chart !!!
simple-rest-crud-service:
  enabled: true
  k8s:
    servicemonitor: false
    hpa: false
  image: 
    repository: <aws_account_id>.dkr.ecr.<aws_region>.amazonaws.com/simple-rest-crud-service
    tag: 0.0.1-SNAPSHOT
    pullPolicy: Always
  resources:
    limits:
      cpu: 400m
      memory: 512Mi
    requests:
      cpu: 400m
      memory: 512Mi
  # true -> enabled a mariadb as a side car of the crud service -> update the configmap:
  #       -> DATABASE_URL: "jdbc:mariadb://localhost:3306/crud-api"
  #       -> db-init.sql: |
  #            CREATE OR REPLACE USER chris@'%' IDENTIFIED BY 'chris2024';
  #            GRANT ALL PRIVILEGES ON * . * TO 'chris'@'%';
  #            SELECT user FROM mysql.user;
  #            DROP USER IF EXISTS chris;
  # 
  # false -> disable the sidecar, but the db dep must be enabled or setup aws rds, and update db access in the configmap
  #       -> disable volumes 
  #       
  sidecar: 
    enabled: false
    value: 
      - image: <aws_account_id>.dkr.ecr.<aws_region>.amazonaws.com/mariadb:11
        name: sidecar-db
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: <custom-db-root-password>
        - name: MARIADB_DATABASE
          value: "crud-api"
        ports:
        - containerPort: 3306
          protocol: TCP
        resources:
          requests:
            cpu: "250m"
            memory: "256Mi"
          limits:
            cpu: "250m"
            memory: "512Mi"
        volumeMounts:
        - mountPath: /docker-entrypoint-initdb.d/db-init.sql
          subPath: db-init.sql
          name: config-vol
  volumes:
    enabled: false
    value: 
      - name: config-vol
        configMap:
          name: db-init
          defaultMode: 0755
          items: 
          - key: "db-init.sql"
            path: "db-init.sql"
  replicaCount: 1
  hpa:
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 90
    targetMemoryUtilizationPercentage: 80
  initContainers:
    enabled: false
    value:
    - name: crud-service-db
      image: radial/busyboxplus:curl
      command: 
      - sh
      - -c
      args:
      - "until nc -vz crud-service-db 3306; do echo waiting for crud-service-db...; sleep 5; done"
  configmap:
    data: 
      APP_SERVER_PORT: "8080"
      APP_MANAGEMENT_PORT: "8081"
      DATABASE_URL: "jdbc:mariadb://crud-service-db:3306/crud-api"
      DATABASE_DRIVER: "org.mariadb.jdbc.Driver"
  secret:
    stringData:
      DATABASE_USER: <custom-db-user>
      DATABASE_PASSWORD: <custom-db-password>

# an alternative of the sidecar for crud service providing a single instance small db, NOT recommended for large-scale data and aws rds is the best option
# if the side car is disabled, this dep must be enabled so the crud service have a db
# if aws rds is used, disable this dep and update the db access in the configmap above for crud service access
crud-service-db:
  enabled: false
  k8s:
    servicemonitor: false
    hpa: false
  image: 
    repository: <aws_account_id>.dkr.ecr.<aws_region>.amazonaws.com/mariadb
    tag: 11
    pullPolicy: Always
  resources:
    limits:
      cpu: 400m
      memory: 512Mi
    requests:
      cpu: 400m
      memory: 512Mi
  volumeMounts:
    enabled: true
    value: 
      - mountPath: /docker-entrypoint-initdb.d/db-init.sql
        subPath: db-init.sql
        name: config-vol
  volumes:
    enabled: true
    value: 
      - name: config-vol
        configMap:
          name: crud-service-db
          defaultMode: 0755
          items: 
          - key: "db-init.sql"
            path: "db-init.sql"
  replicaCount: 1
  configmap:
    data: 
      MYSQL_ROOT_PASSWORD: <custom-db-root-password>
      MARIADB_DATABASE: "crud-api"
      db-init.sql: |
        DROP USER IF EXISTS <custom-db-user>;
        CREATE OR REPLACE USER <custom-db-user>@'%' IDENTIFIED BY '<custom-db-password>';
        GRANT ALL PRIVILEGES ON * . * TO '<custom-db-user>'@'%';
        SELECT user FROM mysql.user;


############# parent chart values: k8s resources, status of serviceAccount
# global.serviceAccount.enabled = k8s.serviceaccount
k8s:
  serviceaccount: true

############# parent chart values: global values used by sub-chart
# serviceAccount.name = global.serviceAccount.name
global:
  deploy:
    env: chris-env
  serviceAccount:
    enabled: true
    name: jenkins-cicd-test-service

############# parent chart values: service account def
# global.serviceAccount.name = serviceAccount.name
serviceAccount:
  annotations: {}
  name: jenkins-cicd-test-service