#################################################################################
# MIT License                                                                   #
#                                                                               #
# Copyright (c) 2024 Chris Yang                                                 #
#                                                                               #
# Permission is hereby granted, free of charge, to any person obtaining a copy  #
# of this software and associated documentation files (the "Software"), to deal #
# in the Software without restriction, including without limitation the rights  #
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell     #
# copies of the Software, and to permit persons to whom the Software is         #
# furnished to do so, subject to the following conditions:                      #
#                                                                               #
# The above copyright notice and this permission notice shall be included in all#
# copies or substantial portions of the Software.                               #
#                                                                               #
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR    #
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,      #
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE   #
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER        #
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, #
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE #
# SOFTWARE.                                                                     #
#################################################################################
---
- name: build and push image to ecr
  hosts: localhost
  vars_files: 
  - ./cd_vars_real.yml
  tasks:
  - name: build app image
    community.docker.docker_image:
      build:
        path: "{{image.crud_svc_build_path}}"
      name: "{{image.crud_svc_name}}"
      tag: "{{image.crud_svc_tag}}"
      push: false
      source: build

  - name: aws ecr login
    ansible.builtin.shell: |
      "/usr/bin/aws ecr get-login-password --region {{aws.region}} | docker login --username AWS --password-stdin {{aws.account_id}}.dkr.ecr.{{aws.region}}.amazonaws.com"

  - name: tag the image
    ansible.builtin.command: "/usr/bin/docker tag {{image.crud_svc_name}}:{{image.crud_svc_tag}} {{aws.account_id}}.dkr.ecr.{{aws.region}}.amazonaws.com/{{image.crud_svc_name}}:{{image.crud_svc_tag}}"

  - name: push to ecr
    ansible.builtin.command: "/usr/bin/docker push {{aws.account_id}}.dkr.ecr.{{aws.region}}.amazonaws.com/{{image.crud_svc_name}}:{{image.crud_svc_tag}}"


# - name: build values.yaml template
  

- name: build helm chart
  host: localhost
  tasks: 
  - name: build helm chart
    ansible.builtin.command: "helm package ./K8sHelmChart --version={{helm.chart_version}}"
    args:
      chdir: "{{helm.chart_build_path}}"

  - name: push helm chart to ecr
    ansible.builtin.command: "helm push {{chart_package_name}} oci://{{aws.account_id}}.dkr.ecr.{{aws.region}}.amazonaws.com"
    args:
     chdir: "{{helm.chart_build_path}}"


- name: deploy helm chart to eks
  host: eks
  tasks: 
  - name: deploy to eks
    ansible.builtin.command: "helm install {{helm.app_name}} oci://{{aws.account_id}}.dkr.ecr.us-east-1.amazonaws.com/{{helm.chart_repo}} --version {{chart_version}} --namespace {{eks.app_namespace}} --atomic --timeout {{helm.app_deploy_timeout}} --debug"
    ignore_errors: true

  - name: upgrade to eks
    ansible.builtin.command: helm upgrade {{helm.app_name}} oci://{{aws.account_id}}.dkr.ecr.us-east-1.amazonaws.com/{{helm.chart_repo}} --version {{chart_version}} --namespace {{eks.app_namespace}} --atomic --timeout {{helm.app_deploy_timeout}} --debug"
    ignore_errors: true