#################################################################################
# MIT License                                                                   #
#                                                                               #
# Copyright (c) 2024 Chris Yang                                                 #
#                                                                               #
# Permission is hereby granted, free of charge, to any person obtaining a copy  #
# of this software and associated documentation files (the "Software"), to deal #
# in the Software without restriction, including without limitation the rights  #
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell     #
# copies of the Software, and to permit persons to whom the Software is         #
# furnished to do so, subject to the following conditions:                      #
#                                                                               #
# The above copyright notice and this permission notice shall be included in all#
# copies or substantial portions of the Software.                               #
#                                                                               #
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR    #
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,      #
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE   #
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER        #
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, #
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE #
# SOFTWARE.                                                                     #
#################################################################################
---
- name: image processing
  hosts: localhost
  vars_files:
  - ./cd_vars.yml
  - ./cd_secret.yml
  tasks:
  - name: push image to ecr
    block: 
    - name: build image
      community.docker.docker_image:
        build:
          path: "{{image.build_path}}"
        name: "{{crud_service.name}}"
        tag: "{{crud_service.image_tag}}"
        push: false
        source: build

    - name: ecr login
      ansible.builtin.shell: "/usr/bin/aws ecr get-login-password --region {{aws_region}} | /usr/bin/docker login --username AWS --password-stdin {{aws_account_id}}.dkr.ecr.{{aws_region}}.amazonaws.com"

    - name: tag image
      ansible.builtin.command: "/usr/bin/docker tag {{crud_service.name}}:{{crud_service.image_tag}} {{aws_account_id}}.dkr.ecr.{{aws_region}}.amazonaws.com/{{crud_service.name}}:{{crud_service.image_tag}}"

    - name: push to ecr
      ansible.builtin.command: "/usr/bin/docker push {{aws_account_id}}.dkr.ecr.{{aws_region}}.amazonaws.com/{{crud_service.name}}:{{crud_service.image_tag}}"
    when: task_flow.image_to_ecr


- name: helm chart processing
  hosts: localhost
  vars_files:
  - ./cd_vars.yml
  - ./cd_secret.yml
  tasks:
  - name: push helm chart to ecr
    block:
    - name: update helm chart values.yml
      ansible.builtin.template:
        src: ./helm_chart_values.j2
        dest: ./K8sHelmChart/values.yaml
        owner: ansibleadmin
        group: ansibleadmin
        mode: 0644

    - name: build helm chart
      ansible.builtin.command: "/usr/local/bin/helm package K8sHelmChart --version={{helm.chart_version}}"
      args:
        chdir: "{{helm.chart_build_path}}"

    - name: push helm chart to ecr
      ansible.builtin.command: "/usr/local/bin/helm push {{helm.chart_package_name}} oci://{{aws_account_id}}.dkr.ecr.{{aws_region}}.amazonaws.com"
      args:
        chdir: "{{helm.chart_build_path}}"
    when: task_flow.chart_to_ecr


- name: first install
  hosts: eks
  vars_files:
  - ./cd_vars.yml
  - ./cd_secret.yml
  tasks:
  - name: deploy to eks
    block:
    - name: aws ecr login
      ansible.builtin.shell: "/usr/bin/aws ecr get-login-password --region {{aws_region}} | /usr/bin/docker login --username AWS --password-stdin {{aws_account_id}}.dkr.ecr.{{aws_region}}.amazonaws.com"

    - name: deploy to eks
      ansible.builtin.command: "/usr/local/bin/helm install {{helm.app_name}} oci://{{aws_account_id}}.dkr.ecr.{{aws_region}}.amazonaws.com/{{helm.chart_repo}} --version {{helm.chart_version}} --namespace {{helm.app_namespace}} --atomic --timeout {{helm.app_deploy_timeout}} --debug"
    when: task_flow.init_install
      

- name: upgrade install
  hosts: eks
  vars_files:
  - ./cd_vars.yml
  - ./cd_secret.yml
  tasks:
  - name: deploy to eks
    block:
    - name: aws ecr login
      ansible.builtin.shell: "/usr/bin/aws ecr get-login-password --region {{aws_region}} | /usr/bin/docker login --username AWS --password-stdin {{aws_account_id}}.dkr.ecr.{{aws_region}}.amazonaws.com"
    - name: upgrade_to_eks
      ansible.builtin.command: "/usr/local/bin/helm upgrade {{helm.app_name}} oci://{{aws_account_id}}.dkr.ecr.{{aws_region}}.amazonaws.com/{{helm.chart_repo}} --version {{helm.chart_version}} --namespace {{helm.app_namespace}} --atomic --timeout {{helm.app_deploy_timeout}} --debug"
      ignore_errors: true
    when: task_flow.upgrade_install